<template>
    <scroller>
        //根节点官方要求只能是container、list、scroller之一, 但实际用div也行
        //dispatch 可以同级用， 不能往下级we用， 能往上级用
        //broadcast 可以同级用， 可以往下级we用， 不能往上级用
        //emit 貌似不能跨文件调用到events里的function
        <div class="ct">
            <image class="img" style="width: 100px; height: 100px;" src="{{img}}"></image>
            <text id="id_weex2" customId="xxxx-test" style="font-size: 28;color:rgb(255,0,0)">Hello Weex1342!</text>
            <text style="font-size: 28; color:rgba(255,0,0, 0.2)" class="singleLine">long long long long text!, long long long long text2!, long long long long text3!</text>
        </div>

        <grid-test id='id_grid_test' section-title="test Title" section-title2="height={{ctHeight}}" style="margin-top:40"></grid-test>

        <text style="font-size: 28;color:rgb(255,0,0)" onclick="onClick('returnWeex2')">Return to Weex2 text</text>
        <text style="font-size: 28;color:rgb(255,0,0)" onclick="onClick('getWeex2Info')">operate Weex2 text</text>

        <text style="font-size: 28;color:rgb(255,0,0)" onclick="onClick('addNumber')">add number</text>
        <text style="font-size: 28;color:rgb(255,0,0)" onclick="onClick('minusNumber')">minus number</text>
        <text style="font-size: 28;color:rgb(255,0,0)" onclick="onClick('testToast')">test Toast</text>
        <text style="font-size: 28;color:rgb(255,0,0)" onclick="onClick('showConfig')">show Config</text>
        <text style="font-size: 28;color:rgb(255,0,0)" onclick="onClick('alert')">alert</text>
        <text style="font-size: 28;color:rgb(255,0,0)" onclick="onClick('confirm')">confirm</text>
        <text style="font-size: 28;color:rgb(255,0,0)" onclick="onClick('prompt')">prompt</text>
        <text style="font-size: 28;color:rgb(255,0,0)" onclick="onClick('jumpOther')">jump to other page</text>

        <text style="font-size: 20;color:rgb(0,255,0)">{{result}}</text>

    </scroller>
</template>

<style>
    .ct {
        width: 750;
        align-items: flex-start;
    }

    .img {
        margin-bottom: 20px;
    }

    .singleLine {
        lines: 1;
        text-overflow: ellipsis;
    }
</style>

<script>
    var dom = require('@weex-module/dom');
    module.exports = {
        data: {
            ctHeight: -1,
            img: 'http://gw.alicdn.com/tps/i2/TB1DpsmMpXXXXabaXXX20ySQVXX-512-512.png_400x400.jpg',
            result: '此处显示结果',
        },
        methods: {
            onClick: function(id) {
                console.log('onclick id=' + id);
                if (id == 'returnWeex2') {
                    let weexTitle2 = this.$el('id_weex2');
                    console.log('this dom el is ' + 'type(weexTitle2)' + "value: " + weexTitle2);
                    dom.scrollToElement(weexTitle2, {
                        offset: -80
                    });
                    console.log('this dom vm is ' + this.$vm('id_weex2'));
                    this.$dispatch('notifyFromChild', 'come for same grade. dispatch');
                    this.$dispatch('notifyFromChild', 'come for same grade. broadcast');
                } else if (id == 'getWeex2Info') {
                    let gridTest = this.$('id_grid_test');
                    console.log('this dom $(\'gridTest\') is: ' + 'JSON.stringify(gridTest)'); //Uncaught TypeError: Converting circular structure to JSON
                    gridTest.sectionTitle3 = "change the text value for 3";
                    this.$broadcast('notifyFromParent', "haha come from parent");
                } else if (id == 'addNumber') {
                    var utils = require('./common/utils')
                    this.result = 'use common utils: add(3,5)=' + utils.add(3, 5);
                    this.$emit('customType1', 'haha ' + id);

                    var storage = require('@weex-module/storage');
                    storage.setItem('bar', 'bar-value', function(e) {
                      // 'e'是一个包含'result'和'data'的对象. e.result判断'setItem'操作是否执行成功.
                      // e.data返回'undefined'表示设置成功，返回'invalid_param'表示key/value为""/null
                      console.log('storage.setItem， e:' + JSON.stringify(e));
                    });

                } else if (id == 'minusNumber') {
                    var utils = require('./common/utils')
                    this.result = 'use common utils: minus(3,5)=' + utils.minus(3, 5);
                    this.$emit('customType2', 'haha2 ' + id);

                    // let utils = require('./common/utils');
                    // let {add, mimus} = utils;
                    // this.result = 'use common utils: minus(3,5)=' + utils.minus(3, 5);

                    var storage = require('@weex-module/storage');
                    storage.getItem('bar', function(e) {
                      // 'e'是一个包含'result'和'data'的对象.
                      // 使用'e.data'获取键的值，如果没有找到对应的键值则返回'undefined'.
                      console.log('storage.getItem e:' + JSON.stringify(e));
                    });

                } else if (id == 'testToast') {
                    var utils = require('./common/utils')
                    utils.toast("this is toast from other file");

                    var storage = require('@weex-module/storage');
                    storage.getAllKeys(function(e) {
                      // 'e'是一个包含'result'和'data'的对象.
                      // e.data返回键名组成的数组.
                      console.log('storage.getAllKeys e:' + JSON.stringify(e));
                    });

                } else if (id == 'showConfig') {
                    this.result = JSON.stringify(this.$getConfig());
                    console.log('show Config: ' + this.result);
                    console.log('Virtual DOM finished, id=' + this.id  + ' config is: ' + JSON.stringify(this.$getConfig()));
                } else if (id == 'alert') {
                    var arg1 = 'I am alert!';
                    var arg2 = 'I am ok';
                    var modal = require('@weex-module/modal');
                    modal.alert({
                        message: arg1,
                        okTitle: arg2
                    }, function(e) {
                        console.log('you choose action e:' + e);
                    })
                } else if (id == 'confirm') {
                    var arg1 = 'I am alert!'
                    var arg2 = 'I am ok'
                    var arg3 = 'I am cancel'
                    var modal = require('@weex-module/modal');
                    modal.confirm({
                        message: arg1,
                        okTitle: arg2,
                        cancelTitle: arg3
                    }, function(e) {
                        console.log('you choose action e:' + e);
                    });
                } else if (id == 'prompt') {
                    var arg1 = 'I am alert!'
                    var arg2 = 'I am ok'
                    var arg3 = 'I am cancel'
                    var modal = require('@weex-module/modal');
                    modal.prompt({
                        message: arg1,
                        okTitle: arg2,
                        cancelTitle: arg3
                    }, function(e) {
                        console.log('you choose action e:' + JSON.stringify(e));
                    });
                } else if (id == 'jumpOther') {
                    var params = {
                        'url': 'image-cover.js',
                        'animated' : 'true',
                    }
                    var navigator = require('@weex-module/navigator');
                    navigator.push(params, function(e) {
                        console.log('navigator.push, e:' + JSON.stringify(e));
                    });
                }
            },
            foo: function (fn) {
                return fn();
            },
            bar: function () {
                console.log('from bar() this is : ' + require('./common/utils').simpleStringify(this));
                return this.result;
            },
        },
        init: function() {
            console.log('ViewModel constructor begins')
        },
        created: function() {
            console.log('Data observation finished')
        },
        ready: function() {
            console.log('Virtual DOM finished, id=' + this.id  + ' config is: ' + JSON.stringify(this.$getConfig()));
            this.ctHeight = this.$getConfig().env.deviceHeight;
            this.$on('notifyFromChild', function(e) {
                console.log('notify from child, e.detail = ' + e.detail);
            });
            console.log('direct log bar() result:' + this.bar());
            console.log('log bar() by foo() result:' + this.foo(this.bar.bind(this)));
        },
        events: {
            customType1: function(e) {
                console.log('customType1: ' + JSON.stringify(e));
            },
            customType2: function(e) {
                console.log('customType2: ' + JSON.stringify(e));
            },
        },
    }
</script>

<script type="data">
    module.exports = {
        ctHeight: -1,
        img: 'http://gw.alicdn.com/tps/i2/TB1DpsmMpXXXXabaXXX20ySQVXX-512-512.png_400x400.jpg',
        result: '此处显示结果 data from script type=\'data\'',
        // id: -1,
    }
</script>
